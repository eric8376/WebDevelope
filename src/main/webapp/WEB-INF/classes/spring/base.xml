<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
			
	<context:annotation-config />
	<context:component-scan base-package="com.microwill">   <!--自动扫描所有注解路径, 排除Controller -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!--bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="jdbc/oracle/ResTxDataSource" /> </bean> -->
	<!--bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close"> <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" 
		/> <property name="url" value="jdbc:oracle:thin:@localhost:1521:ORCL" /> 
		<property name="username" value="user_bask_app" /> <property name="password" 
		value="user_bask_app" /> </bean> -->
	<context:property-placeholder location="classpath:/db.properties"
		ignore-unresolvable="true" />
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${dataSource.driverClassName}" />
		<property name="jdbcUrl" value="${dataSource.url}" />
		<property name="user" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />

		<property name="initialPoolSize" value="3" />
		<property name="maxPoolSize" value="10" />
		<property name="minPoolSize" value="2" />
		<property name="maxIdleTime" value="90" />
		<property name="maxStatements" value="0" />
		<property name="idleConnectionTestPeriod" value="120" />
		<property name="acquireRetryAttempts" value="30" />
		<property name="breakAfterAcquireFailure" value="false" />
		<property name="acquireIncrement" value="1" />
		<property name="testConnectionOnCheckout" value="true" />
		<property name="preferredTestQuery" value="select 1"></property>
	</bean> -->
<bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource"
	destroy-method="close" init-method="init">
	<!-- 基本属性 url、user、password -->
	<property name="url" value="${dataSource.url}" />
	<property name="username" value="${dataSource.username}" />
	<property name="password" value="${dataSource.password}" />
	<property name="driverClassName" value="${dataSource.driverClassName}" />
	<!-- 配置初始化大小、最小、最大 -->
	<property name="initialSize" value="20" />
	<property name="minIdle" value="20" />
	<property name="maxActive" value="100" />
	<!-- 配置获取连接等待超时的时间 -->
	<property name="maxWait" value="60000" />
	<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	<property name="timeBetweenEvictionRunsMillis" value="60000" />
	<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	<property name="minEvictableIdleTimeMillis" value="300000" />
	<property name="validationQuery" value="SELECT 1" />
	<property name="testWhileIdle" value="true" />
	<property name="testOnBorrow" value="false" />
	<property name="testOnReturn" value="false" />
	<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
	<property name="poolPreparedStatements" value="true" />
	<property name="maxPoolPreparedStatementPerConnectionSize"
		value="20" />
	<!-- 配置监控统计拦截的filters -->
	<property name="filters" value="${druid.filters}" />
</bean>


	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean ">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${dataSource.dialect}</prop>
				<prop key="show_sql">${dataSource.show_sql}</prop>
				<prop key="connection.autocommit">${dataSource.autocommit}</prop>
				<prop key="connection.release_mode">${dataSource.release_mode}</prop>
				<prop key="jdbc.fetch_size">${dataSource.fetch_size}</prop>
				<prop key="jdbc.batch_size">${dataSource.batch_size}</prop>
				<prop key="hibernate.format_sql">true</prop><!--【是否格式化SQL】 -->
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.microwill.framework.entity</value>
				<value>com.microwill.project</value>
			</list>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
            <property name="dataSource" ref="dataSource" />  
    </bean>  
	<bean id="hibernatetransactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />
	<bean id="applicationContextHelper" class="com.microwill.framework.ApplicationContextHelper" />
</beans>